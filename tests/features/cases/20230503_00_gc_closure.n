import co
import runtime

fn main() {
    var make_atm = fn():fn(int):int {
        var cash = 1000
        return fn(int amount):int {
            cash -= amount
            return cash
        }
    }

    var makes = fn() {
        [fn(int):int] atms = []

        int i = 0
        for i < 1000 {
            var atm_draw = make_atm()
            atms.push(atm_draw)
            i += 1
        }

        println(runtime.malloc_bytes())
        println(atms[10](10))
        println(atms[599](100))
        println(atms[999](200))

        runtime.gc()
        co.sleep(500) // wait gc finish
        println(runtime.malloc_bytes())
        println(atms[10](10))
        println(atms[599](100))
        println(atms[999](200))
    }

    makes()

    runtime.gc()
    co.sleep(500)
    println(runtime.malloc_bytes())
}